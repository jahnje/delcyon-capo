<?xml version="1.0" encoding="UTF-8"?>
<Capo name="main" mainGroup="default"
  xmlns="http://www.delcyon.com/capo"
  xmlns:client="http://www.delcyon.com/capo-client">
  
  <include src="linux_clients.xml" />
 
  <group name="default">
    <choose>
      <when test="//var[@name = 'os.name' and @value = 'Linux']">
        <call ref="group('linux_group')"/>
      </when>
      <when test="//var[@name = 'os.name' and matches(@value,'.*win.*','i')]">        
        <call ref="group('windows_group')"/>
      </when>
      <when test=".[matches('${os.name}','Mac OS X','i')]">                
        <call ref="group('osx_group')"/>        
      </when>
      <otherwise>
        <call ref="group('other_group')"/>            
      </otherwise>
    </choose>
    <log output="STDERR" message="hostname = ${hostname} MAC = ${MAC}"/>
  </group>

  <group name="osx_group" returns="MAC,hostname">
    <log output="STDOUT" message="Processing OSX Group"/>    
    <client:command name="osx_ifconfig" exec="/sbin/ifconfig"/>       
    <transform name="osx_ifconfig_transform" stylesheet="osx_ifconfig_command_stdout_parser.xsl" ref="${osx_ifconfig}"/>        
    <var name="MAC" eval="${osx_ifconfig_transform}/link[@dev = 'en0']/@ether"/>    
    <call ref="group('osx_client_group')"/>
    <log output="STDERR" message="hostname = ${hostname} MAC = ${MAC} T = ${osx_ifconfig_transform}"/>
  </group>
  
  <group name="osx_client_group"  entry="//table[@name = 'clients']/entry[@key = '${MAC}']" returns="hostname">
    <choose>
      <when test=".[string-length('${clientName}') > 0]">
        <log output="STDOUT" message="found ${clientName}" /> 
        <client:command name="hostname" exec="/bin/hostname"/>
        <var name="hostname" eval="${hostname}/stdout"/>
        <log output="STDOUT" message="hostname = ${hostname}" ref="command('hostname')" />
        <copy src="test.txt" dest="test.txt.copy">
          <triggerFilter replacement="${clientName}" trigger="TEST2" />
          <regexFilter replacement="T" regex="t" />
        </copy>
      </when>
      <otherwise>
        <log output="STDERR" message="DOH!" />
      </otherwise>
    </choose>
    <log output="STDERR" message="hostname = ${hostname} MAC = ${MAC}"/>
  </group>

  
</Capo>

