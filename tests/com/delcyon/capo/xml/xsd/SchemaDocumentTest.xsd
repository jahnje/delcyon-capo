<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    vc:minVersion="1.1" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" targetNamespace="test" xmlns="test">
    <xs:element name="TestTop">
        <xs:complexType>
            <xs:all>
                <xs:any maxOccurs="unbounded"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    
    <xs:element name="BASIC">
        <xs:complexType>
            <xs:sequence><!-- parent/seq is satsifed when all of it children match it's initial satisfaction state? -->
                <xs:element name="A"/><!-- next possible is [B,C,*] -->
                <xs:choice>
                    <xs:sequence>
                        <xs:element name="B"/><!-- next possible is [B,C] -->
                        <xs:choice>
                            <xs:element name="B"/><!-- next possible is [D,E,F] --><!-- run back up until we hit first unstaisfied parent-->
                            <xs:element name="C"/><!-- next possible is [D,E,F] --><!-- run back up until we hit first unstaisfied parent-->
                        </xs:choice>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:any/><!-- next possible is [D,E,F] --><!-- run back up until we hit first unstaisfied parent-->
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element name="C"/><!-- next possible is [C] --><!-- run back up until we hit first unstaisfied parent-->
                        <xs:element name="C"/><!-- next possible is [C] --><!-- run back up until we hit first unstaisfied parent-->
                        <xs:element name="C"/><!-- next possible is [D,E,F] --><!-- run back up until we hit first unstaisfied parent-->
                    </xs:sequence>
                    
                </xs:choice>
                <xs:choice>
                    <xs:element name="D"/><!-- VALID -->
                    <xs:element name="E"/><!-- VALID -->
                    <xs:sequence>
                        <xs:element name="F"></xs:element><!-- next possible is [G] --><!-- run back up until we hit first unstaisfied parent-->
                        <xs:element name="G"></xs:element><!-- VALID -->
                    </xs:sequence>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="root">
        <xs:complexType>
            <xs:all >
                <xs:element name="A" maxOccurs="2"/>
                <xs:any maxOccurs="3" minOccurs="2" />                
            </xs:all>
        </xs:complexType>    
    </xs:element>
    
    <xs:element name="Other"  type="xs:anySimpleType">
       
    </xs:element>
    <xs:element name="NoTextElement" >
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Other" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="SEQTEST">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="SEQ.A"/>
                <xs:sequence>
                    <xs:element name="SEQ.B"/>
                    <xs:element name="SEQ.D"/>
                </xs:sequence>                
                <xs:element name="SEQ.C"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    
    <xs:element name="CHOICETEST1">
        <xs:complexType>
            <xs:choice>
                
                <xs:sequence>
                    <xs:element name="CHOICETEST1.A"/>                    
                    <xs:element name="CHOICETEST1.A"/>
                </xs:sequence>
               <!-- <xs:sequence> <!-\-ambigous, not allowed-\->
                    <xs:element name="CHOICETEST1.A"/>
                    <xs:element name="CHOICETEST1.C"/>
                </xs:sequence>-->
                               
                <xs:sequence>                    
                    <xs:element name="CHOICETEST1.B"/>                    
                    <xs:element name="CHOICETEST1.B"/>
                </xs:sequence>
                <xs:sequence>                    
                    <xs:element name="CHOICETEST1.C"/>                    
                    <xs:element name="CHOICETEST1.B"/>
                </xs:sequence>
                <xs:sequence>                    
                    <xs:element name="CHOICETEST1.D" maxOccurs="2"/>                                        
                </xs:sequence>
                <xs:group ref="EFG_GROUP"/>
                <xs:sequence>
                    <xs:element name="CHOICETEST1.H"></xs:element>
                    <xs:element name="CHOICETEST1.I" maxOccurs="2" minOccurs="0"/>
                    <xs:element name="CHOICETEST1.J"></xs:element>
                </xs:sequence>
               
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:group name="EFG_GROUP">
        <xs:sequence>                    
            <xs:element name="CHOICETEST1.E" maxOccurs="2"/>
            <xs:element name="CHOICETEST1.F" maxOccurs="2" minOccurs="0"/>
            <xs:element name="CHOICETEST1.G" maxOccurs="2"/>            
        </xs:sequence>
    </xs:group>
    
    <xs:element name="R">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="A" minOccurs="1" type="xs:date"/>
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:sequence>
                        <xs:element name="B"/>
                        <xs:choice>
                            <xs:element name="B"/>
                            <xs:element name="C"/>
                        </xs:choice>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element name="C"/>
                        <xs:element name="C"/>
                        <xs:element name="C"/>                        
                    </xs:sequence>
                    <xs:sequence>
                        <xs:any/>
                    </xs:sequence>
                    <!--<xs:group ref="G"/>-->
                </xs:choice>
                <xs:element name="D"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
   
    
    <xs:group name="G">
        <xs:all>
            <xs:element name="B"/>
            <xs:element name="C"/>
            <xs:element name="D"/>
        </xs:all>
    </xs:group>
    
</xs:schema>
